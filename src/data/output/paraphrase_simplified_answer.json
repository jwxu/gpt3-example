{
    "data": [
        {
            "question": "who was the doctoral supervisor of albert einstein ?",
            "paraphrase": "who is albert einstein ? who was einstein's doctoral supervisor ?",
            "gold": "[ doctoral_advisor ] of @wd . entity ( ) filter id == \" Q937 \" ^^wd:entity ;",
            "thingtalk": "[ doctoral_advisor ] of @wd . entity ( ) filter id == \" Q937 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?x. }",
            "gold_answer": "Heinrich Burkhardt (Q97154)\nHeinrich Friedrich Weber (Q116635)\nAlfred Kleiner (Q4175282)\n",
            "answer": "Heinrich Burkhardt (Q97154)\nHeinrich Friedrich Weber (Q116635)\nAlfred Kleiner (Q4175282)\n"
        },
        {
            "question": "who was the doctoral supervisor of albert einstein ?",
            "paraphrase": "what was albert einstein's doctoral field of study? who supervised albert einstein's doctoral studies?",
            "gold": "[ doctoral_advisor ] of @wd . entity ( ) filter id == \" Q937 \" ^^wd:entity ;",
            "thingtalk": "[ doctoral_student ] of @wd . entity ( ) filter id == \" Q1108239 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1108239> <http://www.wikidata.org/prop/direct/P185> ?x. }",
            "gold_answer": "Heinrich Burkhardt (Q97154)\nHeinrich Friedrich Weber (Q116635)\nAlfred Kleiner (Q4175282)\n",
            "answer": "None"
        },
        {
            "question": "did kaurismäki ever win the grand prix at cannes ?",
            "paraphrase": "what is the grand prix at cannes ? has aki kaurismäki ever won it?",
            "gold": "[ contains ( award_received , \" Q844804 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q276186 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "did kaurismäki ever win the grand prix at cannes ?",
            "paraphrase": "who is kaurismäki ? has kaurismäki ever won the grand prix at cannes?",
            "gold": "[ contains ( award_received , \" Q844804 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q276186 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "did kaurismäki ever win the grand prix at cannes ?",
            "paraphrase": "who is kaurismäki ? did Aki Kaurismäki win the grand prix at Cannes Film Festival?",
            "gold": "[ contains ( award_received , \" Q844804 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q276186 \" ^^wd:entity ;",
            "thingtalk": "[ director ] of @wd . entity ( ) filter id == \" Q276186 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P57> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "who wrote the song hotel california ?",
            "paraphrase": "what is the name of the song ? who wrote hotel california ?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q780394 \" ^^wd:entity ;",
            "thingtalk": "[ title ] of @wd . entity ( ) filter id == \" Q780394 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q780394> <http://www.wikidata.org/prop/direct/P1476> ?x. }",
            "gold_answer": "Don Felder (Q704399)",
            "answer": ""
        },
        {
            "question": "who wrote the song hotel california ?",
            "paraphrase": "what is the name of the song? who wrote the song hotel california?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q780394 \" ^^wd:entity ;",
            "thingtalk": "[ title ] of @wd . entity ( ) filter id == \" Q780394 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q780394> <http://www.wikidata.org/prop/direct/P1476> ?x. }",
            "gold_answer": "Don Felder (Q704399)",
            "answer": ""
        },
        {
            "question": "who wrote the song hotel california ?",
            "paraphrase": "who is the lead singer of the eagles ? who wrote the lyrics for the song hotel california?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q780394 \" ^^wd:entity ;",
            "thingtalk": "[ lyrics_by ] of @wd . entity ( ) filter id == \" Q189635 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q189635> <http://www.wikidata.org/prop/direct/P676> ?x. }",
            "gold_answer": "Don Felder (Q704399)",
            "answer": "None"
        },
        {
            "question": "who was on the apollo 11 mission ?",
            "paraphrase": "what was the apollo 11 mission ? who were the astronauts on the apollo 11 mission ?",
            "gold": "[ crew_members ] of @wd . entity ( ) filter id == \" Q43653 \" ^^wd:entity ;",
            "thingtalk": "[ crew_members ] of @wd . entity ( ) filter id == \" Q11471 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q11471> <http://www.wikidata.org/prop/direct/P1029> ?x. }",
            "gold_answer": "Michael Collins (Q104859)\nNeil Armstrong (Q1615)\nBuzz Aldrin (Q2252)\n",
            "answer": "None"
        },
        {
            "question": "who was on the apollo 11 mission ?",
            "paraphrase": "what was the apollo 11 mission? who were the astronauts on the apollo 11 mission?",
            "gold": "[ crew_members ] of @wd . entity ( ) filter id == \" Q43653 \" ^^wd:entity ;",
            "thingtalk": "[ crew_members ] of @wd . entity ( ) filter id == \" Q11471 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q11471> <http://www.wikidata.org/prop/direct/P1029> ?x. }",
            "gold_answer": "Michael Collins (Q104859)\nNeil Armstrong (Q1615)\nBuzz Aldrin (Q2252)\n",
            "answer": "None"
        },
        {
            "question": "who was on the apollo 11 mission ?",
            "paraphrase": "what year was the apollo 11 mission ? who were the astronauts of the apollo 11 mission?",
            "gold": "[ crew_members ] of @wd . entity ( ) filter id == \" Q43653 \" ^^wd:entity ;",
            "thingtalk": "[ crew_members ] of @wd . entity ( ) filter id == \" Q11471 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q11471> <http://www.wikidata.org/prop/direct/P1029> ?x. }",
            "gold_answer": "Michael Collins (Q104859)\nNeil Armstrong (Q1615)\nBuzz Aldrin (Q2252)\n",
            "answer": "None"
        },
        {
            "question": "which electronics companies were founded in beijing ?",
            "paraphrase": "which companies were founded in beijing ? what type of companies were founded in beijing ?",
            "gold": "@wd . entity ( ) filter contains ( industry , \" Q581105 \" ^^wd:entity ) && contains ( location_of_formation , \" Q956 \" ^^wd:entity ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Xiaomi (Q1636958)",
            "answer": ""
        },
        {
            "question": "which electronics companies were founded in beijing ?",
            "paraphrase": "where is beijing located? what electronics companies are based in beijing?",
            "gold": "@wd . entity ( ) filter contains ( industry , \" Q581105 \" ^^wd:entity ) && contains ( location_of_formation , \" Q956 \" ^^wd:entity ) ;",
            "thingtalk": "[ headquarters_location ] of @wd . entity ( ) filter id == \" Q956 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q956> <http://www.wikidata.org/prop/direct/P159> ?x. }",
            "gold_answer": "Xiaomi (Q1636958)",
            "answer": "None"
        },
        {
            "question": "which electronics companies were founded in beijing ?",
            "paraphrase": "what electronics companies are located in beijing ? what companies were founded in beijing?",
            "gold": "@wd . entity ( ) filter contains ( industry , \" Q581105 \" ^^wd:entity ) && contains ( location_of_formation , \" Q956 \" ^^wd:entity ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Xiaomi (Q1636958)",
            "answer": ""
        },
        {
            "question": "what is in a chocolate chip cookie ?",
            "paraphrase": "what are the ingredients in a chocolate chip cookie ? what type of chips are used in a chocolate chip cookie?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q14169302 \" ^^wd:entity ;",
            "thingtalk": "[ has_parts ] of @wd . entity ( ) filter id == \" Q14169302 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q14169302> <http://www.wikidata.org/prop/direct/P527> ?x. }",
            "gold_answer": "chocolate chip (Q1329680)\nflour (Q36465)\n",
            "answer": "chocolate chip (Q1329680)\nflour (Q36465)\n"
        },
        {
            "question": "what is in a chocolate chip cookie ?",
            "paraphrase": "what are the ingredients of a chocolate chip cookie ?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q14169302 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "chocolate chip (Q1329680)\nflour (Q36465)\n",
            "answer": ""
        },
        {
            "question": "what is in a chocolate chip cookie ?",
            "paraphrase": "what are the ingredients in a chocolate chip cookie?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q14169302 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "chocolate chip (Q1329680)\nflour (Q36465)\n",
            "answer": ""
        },
        {
            "question": "was the wife of president lincoln called mary ?",
            "paraphrase": "who is the wife of president lincoln ? what is her name?",
            "gold": "[ contains~ ( spouse , \" mary \" ) ] of @wd . entity ( ) filter id == \" Q91 \" ^^wd:entity ;",
            "thingtalk": "[ spouse ] of @wd . entity ( ) filter id == \" Q91 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?x. }",
            "gold_answer": "",
            "answer": "Mary Todd Lincoln (Q215062)"
        },
        {
            "question": "was the wife of president lincoln called mary ?",
            "paraphrase": "who was the president of the united states during the civil war ? what was the name of abraham lincoln's wife ?",
            "gold": "[ contains~ ( spouse , \" mary \" ) ] of @wd . entity ( ) filter id == \" Q91 \" ^^wd:entity ;",
            "thingtalk": "[ < spouse / head_of_state / name > ] of @wd . entity ( ) filter id == \" Q25339785 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q25339785> <http://www.wikidata.org/prop/direct/P26>/<http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P2561> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "was the wife of president lincoln called mary ?",
            "paraphrase": "what is the name of the wife of president lincoln? was mary todd lincoln the wife of abraham lincoln?",
            "gold": "[ contains~ ( spouse , \" mary \" ) ] of @wd . entity ( ) filter id == \" Q91 \" ^^wd:entity ;",
            "thingtalk": "[ spouse ] of @wd . entity ( ) filter id == \" Q91 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?x. }",
            "gold_answer": "",
            "answer": "Mary Todd Lincoln (Q215062)"
        },
        {
            "question": "how many movies did park chan-wook direct ?",
            "paraphrase": "who is park chan-wook ? how many movies has park chan-wook directed?",
            "gold": "count ( @wd . entity ( ) filter contains ( director , \" Q315484 \" ^^wd:entity ) ) ;",
            "thingtalk": "[ director ] of @wd . entity ( ) filter id == \" Q315484 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q315484> <http://www.wikidata.org/prop/direct/P57> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "how many movies did park chan-wook direct ?",
            "paraphrase": "who is park chan-wook ? how many movies has he directed?",
            "gold": "count ( @wd . entity ( ) filter contains ( director , \" Q315484 \" ^^wd:entity ) ) ;",
            "thingtalk": "[ count ( director ) ] of @wd . entity ( ) filter id == \" Q315484 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "in which united states state is mount mckinley located ?",
            "paraphrase": "where is mount mckinley located ? what state is mount mckinley in ?",
            "gold": "[ located_in_the_administrative_territorial_entity ] of @wd . entity ( ) filter id == \" Q130018 \" ^^wd:entity ;",
            "thingtalk": "[ located_in_the_administrative_territorial_entity ] of @wd . entity ( ) filter id == \" Q130018 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131>+ ?x. }",
            "gold_answer": "Denali Borough (Q179950)\nAlaska (Q797)\nUnited States of America (Q30)\n",
            "answer": "Denali Borough (Q179950)\nAlaska (Q797)\nUnited States of America (Q30)\n"
        },
        {
            "question": "in which united states state is mount mckinley located ?",
            "paraphrase": "where is mount mckinley located ? in which state is mount mckinley located?",
            "gold": "[ located_in_the_administrative_territorial_entity ] of @wd . entity ( ) filter id == \" Q130018 \" ^^wd:entity ;",
            "thingtalk": "[ located_in_the_administrative_territorial_entity ] of @wd . entity ( ) filter id == \" Q130018 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131>+ ?x. }",
            "gold_answer": "Denali Borough (Q179950)\nAlaska (Q797)\nUnited States of America (Q30)\n",
            "answer": "Denali Borough (Q179950)\nAlaska (Q797)\nUnited States of America (Q30)\n"
        },
        {
            "question": "which indian company has the most employees ?",
            "paraphrase": "what companies are based in india ? how many employees does tata consultancy services have?",
            "gold": "sort ( employees desc of @wd . organization ( ) filter contains ( country , \" Q668 \" ^^wd:entity ) && instance_of == \" Q4830453 \" ^^wd:domain ) [ 1 ] ;",
            "thingtalk": "sum ( employees of @wd . entity ( ) filter contains ( headquarters_location , \" Q668 \" ^^wd:entity ) && id == \" Q13227919 \" ^^wd:entity ) ;",
            "sparql": "SELECT (SUM(?x) as ?sum) WHERE { <http://www.wikidata.org/entity/Q13227919> <http://www.wikidata.org/prop/direct/P1128> ?x. <http://www.wikidata.org/entity/Q13227919> <http://www.wikidata.org/prop/direct/P159> <http://www.wikidata.org/entity/Q668>. }",
            "gold_answer": "Indian Railways (Q819425)",
            "answer": ""
        },
        {
            "question": "which indian company has the most employees ?",
            "paraphrase": "what companies are based in India? which company has the most employees in India?",
            "gold": "sort ( employees desc of @wd . organization ( ) filter contains ( country , \" Q668 \" ^^wd:entity ) && instance_of == \" Q4830453 \" ^^wd:domain ) [ 1 ] ;",
            "thingtalk": "sort ( employees desc of @wd . corporation ( ) filter contains ( headquarters_location , \" Q668 \" ^^wd:entity ) ) [ 1 ] ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q167037>. ?x <http://www.wikidata.org/prop/direct/P1128> ?y. ?x <http://www.wikidata.org/prop/direct/P159> <http://www.wikidata.org/entity/Q668>. } ORDER BY DESC(?y) LIMIT 1",
            "gold_answer": "Indian Railways (Q819425)",
            "answer": "None"
        },
        {
            "question": "which indian company has the most employees ?",
            "paraphrase": "what are the major companies in india? how many employees does tata group have?",
            "gold": "sort ( employees desc of @wd . organization ( ) filter contains ( country , \" Q668 \" ^^wd:entity ) && instance_of == \" Q4830453 \" ^^wd:domain ) [ 1 ] ;",
            "thingtalk": "[ employees ] of @wd . entity ( ) filter id == \" Q331715 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q331715> <http://www.wikidata.org/prop/direct/P1128> ?x. }",
            "gold_answer": "Indian Railways (Q819425)",
            "answer": ""
        },
        {
            "question": "in which school did obama ' s wife study ?",
            "paraphrase": "who is obama's wife ? what school did michelle obama study at?",
            "gold": "[ < spouse / educated_at > ] of @wd . entity ( ) filter id == \" Q76 \" ^^wd:entity ;",
            "thingtalk": "[ spouse ] of @wd . entity ( ) filter id == \" Q13133 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q13133> <http://www.wikidata.org/prop/direct/P26> ?x. }",
            "gold_answer": "Livingston High School (Q6659650)\nWhitney M. Young Magnet High School (Q7996715)\nWoodlawn High School (Q8033019)\nMarymount University (Q14712798)\nPrinceton University (Q21578)\nand 1 more ...",
            "answer": "Barack Obama (Q76)"
        },
        {
            "question": "where does piccadilly start ?",
            "paraphrase": "what is piccadilly? where does piccadilly line start?",
            "gold": "[ terminus ] of @wd . entity ( ) filter id == \" Q1124023 \" ^^wd:entity ;",
            "thingtalk": "[ terminus ] of @wd . entity ( ) filter id == \" Q104810552 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q104810552> <http://www.wikidata.org/prop/direct/P559> ?x. }",
            "gold_answer": "Piccadilly Circus (Q215255)\nHyde Park Corner (Q2166146)\n",
            "answer": "None"
        },
        {
            "question": "where does piccadilly start ?",
            "paraphrase": "where does the piccadilly line start? what is the first station on the piccadilly line?",
            "gold": "[ terminus ] of @wd . entity ( ) filter id == \" Q1124023 \" ^^wd:entity ;",
            "thingtalk": "[ start_point ] of @wd . entity ( ) filter id == \" Q207689 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q207689> <http://www.wikidata.org/prop/direct/P1427> ?x. }",
            "gold_answer": "Piccadilly Circus (Q215255)\nHyde Park Corner (Q2166146)\n",
            "answer": "None"
        },
        {
            "question": "where does piccadilly start ?",
            "paraphrase": "where does the piccadilly line start ? where does the piccadilly line terminate ?",
            "gold": "[ terminus ] of @wd . entity ( ) filter id == \" Q1124023 \" ^^wd:entity ;",
            "thingtalk": "[ terminus ] of @wd . entity ( ) filter id == \" Q207689 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q207689> <http://www.wikidata.org/prop/direct/P559> ?x. }",
            "gold_answer": "Piccadilly Circus (Q215255)\nHyde Park Corner (Q2166146)\n",
            "answer": "Heathrow Terminal 5 station (Q800907)\nCockfosters tube station (Q1105305)\nUxbridge tube station (Q1757126)\n"
        },
        {
            "question": "what is the capital of cameroon ?",
            "paraphrase": "what is the name of the capital of cameroon ?",
            "gold": "[ capital ] of @wd . entity ( ) filter id == \" Q1009 \" ^^wd:entity ;",
            "thingtalk": "[ capital ] of @wd . entity ( ) filter id == \" Q3808 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q3808> <http://www.wikidata.org/prop/direct/P36> ?x. }",
            "gold_answer": "Yaoundé (Q3808)",
            "answer": "None"
        },
        {
            "question": "what is the capital of cameroon ?",
            "paraphrase": "what is the largest city in cameroon ? what is the name of the capital of cameroon ?",
            "gold": "[ capital ] of @wd . entity ( ) filter id == \" Q1009 \" ^^wd:entity ;",
            "thingtalk": "[ capital ] of @wd . entity ( ) filter id == \" Q3808 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q3808> <http://www.wikidata.org/prop/direct/P36> ?x. }",
            "gold_answer": "Yaoundé (Q3808)",
            "answer": "None"
        },
        {
            "question": "what is the capital of cameroon ?",
            "paraphrase": "where is cameroon located ? what is the name of cameroon's capital ?",
            "gold": "[ capital ] of @wd . entity ( ) filter id == \" Q1009 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Yaoundé (Q3808)",
            "answer": ""
        },
        {
            "question": "when did the boston tea party take place ?",
            "paraphrase": "what year did the boston tea party take place ?",
            "gold": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "thingtalk": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?x. }",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "when did the boston tea party take place ?",
            "paraphrase": "what is the boston tea party ? when did the boston tea party occur?",
            "gold": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "thingtalk": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?x. }",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "when did the boston tea party take place ?",
            "paraphrase": "what was the boston tea party ? when did the event occur ?",
            "gold": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "thingtalk": "[ point_in_time ] of @wd . entity ( ) filter id == \" Q19024 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q19024> <http://www.wikidata.org/prop/direct/P585> ?x. }",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "who played gus fring in breaking bad ?",
            "paraphrase": "what tv show is breaking bad ? who played the character gus fring in breaking bad?",
            "gold": "[ cast_member filter character_role == \" Q5620660 \" ^^wd:entity ] of @wd . entity ( ) ;",
            "thingtalk": "[ cast_member ] of @wd . television_series ( ) filter instance_of == \" Q5620660 \" ^^wd:domain ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q5620660>. ?x <http://www.wikidata.org/prop/direct/P161> ?y. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "who played gus fring in breaking bad ?",
            "paraphrase": "what tv show is breaking bad ? who played the character gus fring in breaking bad ?",
            "gold": "[ cast_member filter character_role == \" Q5620660 \" ^^wd:entity ] of @wd . entity ( ) ;",
            "thingtalk": "[ cast_member ] of @wd . television_series ( ) filter instance_of == \" Q5620660 \" ^^wd:domain ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q5620660>. ?x <http://www.wikidata.org/prop/direct/P161> ?y. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "who played gus fring in breaking bad ?",
            "paraphrase": "what is the name of the tv show breaking bad ? who is the actor that played gus fring?",
            "gold": "[ cast_member filter character_role == \" Q5620660 \" ^^wd:entity ] of @wd . entity ( ) ;",
            "thingtalk": "[ cast_member ] of @wd . entity ( ) filter id == \" Q5620660 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5620660> <http://www.wikidata.org/prop/direct/P161> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "who wrote harry potter ?",
            "paraphrase": "what is the name of the author of harry potter ? who is j.k. rowling ?",
            "gold": "[ author ] of @wd . entity ( ) filter id == \" Q8337 \" ^^wd:entity ;",
            "thingtalk": "[ author ] of @wd . entity ( ) filter id == \" Q8337 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?x. }",
            "gold_answer": "J. K. Rowling (Q34660)",
            "answer": "J. K. Rowling (Q34660)"
        },
        {
            "question": "who wrote harry potter ?",
            "paraphrase": "what is the name of the harry potter series ? who is the author of the harry potter series ?",
            "gold": "[ author ] of @wd . entity ( ) filter id == \" Q8337 \" ^^wd:entity ;",
            "thingtalk": "[ author ] of @wd . entity ( ) filter id == \" Q216930 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q216930> <http://www.wikidata.org/prop/direct/P50> ?x. }",
            "gold_answer": "J. K. Rowling (Q34660)",
            "answer": "None"
        },
        {
            "question": "who wrote harry potter ?",
            "paraphrase": "what is the name of the harry potter series ? who is the author of the harry potter books?",
            "gold": "[ author ] of @wd . entity ( ) filter id == \" Q8337 \" ^^wd:entity ;",
            "thingtalk": "[ author ] of @wd . entity ( ) filter id == \" Q8337 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q8337> <http://www.wikidata.org/prop/direct/P50> ?x. }",
            "gold_answer": "J. K. Rowling (Q34660)",
            "answer": "J. K. Rowling (Q34660)"
        },
        {
            "question": "which actors play in big bang theory ?",
            "paraphrase": "what is the name of the tv show ? who stars in big bang theory ?",
            "gold": "[ cast_member ] of @wd . entity ( ) filter id == \" Q8539 \" ^^wd:entity ;",
            "thingtalk": "[ title ] of @wd . entity ( ) filter id == \" Q323 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q323> <http://www.wikidata.org/prop/direct/P1476> ?x. }",
            "gold_answer": "Charlie Sheen (Q103939)\nGeorge Takei (Q110154)\nRiki Lindhome (Q120406)\nStan Lee (Q181900)\nJim Parsons (Q190972)\nand 53 more ...",
            "answer": "None"
        },
        {
            "question": "which actors play in big bang theory ?",
            "paraphrase": "how many actors are in big bang theory ? who plays the characters of sheldon cooper, leonard hofstadter, penny and raj koothrappali ?",
            "gold": "[ cast_member ] of @wd . entity ( ) filter id == \" Q8539 \" ^^wd:entity ;",
            "thingtalk": "[ count ( cast_member ) ] of @wd . entity ( ) filter id == \" Q629583 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Charlie Sheen (Q103939)\nGeorge Takei (Q110154)\nRiki Lindhome (Q120406)\nStan Lee (Q181900)\nJim Parsons (Q190972)\nand 53 more ...",
            "answer": "None"
        },
        {
            "question": "which actors play in big bang theory ?",
            "paraphrase": "how many actors are in big bang theory ? who are the actors in big bang theory?",
            "gold": "[ cast_member ] of @wd . entity ( ) filter id == \" Q8539 \" ^^wd:entity ;",
            "thingtalk": "[ count ( cast_member ) ] of @wd . entity ( ) filter id == \" Q323 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Charlie Sheen (Q103939)\nGeorge Takei (Q110154)\nRiki Lindhome (Q120406)\nStan Lee (Q181900)\nJim Parsons (Q190972)\nand 53 more ...",
            "answer": "None"
        },
        {
            "question": "what is the largest country in the world ?",
            "paraphrase": "what is the area of russia ? what is the population of china?",
            "gold": "sort ( area desc of @wd . country ( ) ) [ 1 ] ;",
            "thingtalk": "[ area ] of @wd . entity ( ) filter id == \" Q1048240 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1048240> <http://www.wikidata.org/prop/direct/P2046> ?x. }",
            "gold_answer": "Union State (Q166110)",
            "answer": "None"
        },
        {
            "question": "what is the largest country in the world ?",
            "paraphrase": "what is the total land area of the largest country in the world ?",
            "gold": "sort ( area desc of @wd . country ( ) ) [ 1 ] ;",
            "thingtalk": "[ area ] of @wd . country ( ) ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q6256>. ?x <http://www.wikidata.org/prop/direct/P2046> ?y. }",
            "gold_answer": "Union State (Q166110)",
            "answer": "160and 238 more ..."
        },
        {
            "question": "what is the largest country in the world ?",
            "paraphrase": "what is the area of russia ? what is the area of canada ? what is the area of china ? which country is the largest in terms of area ?",
            "gold": "sort ( area desc of @wd . country ( ) ) [ 1 ] ;",
            "thingtalk": "[ area ] of sort ( area desc of @wd . country ( ) ) [ 1 ] ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q6256>. ?x <http://www.wikidata.org/prop/direct/P2046> ?y. } ORDER BY DESC(?y) LIMIT 1",
            "gold_answer": "Union State (Q166110)",
            "answer": ""
        },
        {
            "question": "which states border illinois ?",
            "paraphrase": "which states are adjacent to illinois?",
            "gold": "[ shares_border_with ] of @wd . entity ( ) filter id == \" Q1204 \" ^^wd:entity ;",
            "thingtalk": "@wd . country ( ) filter contains ( shares_border_with , \" Q1048 \" ^^wd:entity ) ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q6256>. ?x <http://www.wikidata.org/prop/direct/P47> <http://www.wikidata.org/entity/Q1048>. }",
            "gold_answer": "Michigan (Q1166)\nIndiana (Q1415)\nWisconsin (Q1537)\nIowa (Q1546)\nMissouri (Q1581)\nand 1 more ...",
            "answer": "None"
        },
        {
            "question": "which states border illinois ?",
            "paraphrase": "what states border illinois? which states are adjacent to illinois?",
            "gold": "[ shares_border_with ] of @wd . entity ( ) filter id == \" Q1204 \" ^^wd:entity ;",
            "thingtalk": "[ shares_border_with ] of @wd . entity ( ) filter id == \" Q1204 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1204> <http://www.wikidata.org/prop/direct/P47> ?x. }",
            "gold_answer": "Michigan (Q1166)\nIndiana (Q1415)\nWisconsin (Q1537)\nIowa (Q1546)\nMissouri (Q1581)\nand 1 more ...",
            "answer": "Michigan (Q1166)\nIndiana (Q1415)\nWisconsin (Q1537)\nIowa (Q1546)\nMissouri (Q1581)\nand 1 more ..."
        },
        {
            "question": "which states border illinois ?",
            "paraphrase": "which states are north of illinois? which states are south of illinois? which states are east of illinois? which states are west of illinois?",
            "gold": "[ shares_border_with ] of @wd . entity ( ) filter id == \" Q1204 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Michigan (Q1166)\nIndiana (Q1415)\nWisconsin (Q1537)\nIowa (Q1546)\nMissouri (Q1581)\nand 1 more ...",
            "answer": ""
        },
        {
            "question": "how many goals did pelé score ?",
            "paraphrase": "who is pelé ? how many goals did edson arantes do nascimento score?",
            "gold": "count ( member_of_sports_team of @wd . entity ( ) filter id == \" Q12897 \" ^^wd:entity ) ;",
            "thingtalk": "[ member_of_sports_team ] of @wd . entity ( ) filter id == \" Q12897 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q12897> <http://www.wikidata.org/prop/direct/P54> ?x. }",
            "gold_answer": "",
            "answer": "Santos F.C. (Q80955)\nBrazil national football team (Q83459)\nNew York Cosmos (Q646135)\nBauru Atlético Clube (Q2340403)\n"
        },
        {
            "question": "how many goals did pelé score ?",
            "paraphrase": "what is pelé's career goal tally?",
            "gold": "count ( member_of_sports_team of @wd . entity ( ) filter id == \" Q12897 \" ^^wd:entity ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "who is the president of eritrea ?",
            "paraphrase": "what country is eritrea ? who is the president of eritrea?",
            "gold": "[ head_of_state ] of @wd . entity ( ) filter id == \" Q986 \" ^^wd:entity ;",
            "thingtalk": "[ head_of_state ] of @wd . entity ( ) filter id == \" Q986 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q986> <http://www.wikidata.org/prop/direct/P35> ?x. }",
            "gold_answer": "Isaias Afwerki (Q57348)",
            "answer": "Isaias Afwerki (Q57348)"
        },
        {
            "question": "who is the president of eritrea ?",
            "paraphrase": "what is the name of the president of eritrea ? who is the current president of eritrea?",
            "gold": "[ head_of_state ] of @wd . entity ( ) filter id == \" Q986 \" ^^wd:entity ;",
            "thingtalk": "[ office_held_by_head_of_state ] of @wd . entity ( ) filter id == \" Q81706 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q81706> <http://www.wikidata.org/prop/direct/P1906> ?x. }",
            "gold_answer": "Isaias Afwerki (Q57348)",
            "answer": "None"
        },
        {
            "question": "who is the president of eritrea ?",
            "paraphrase": "what country is eritrea in ? who is the president of eritrea ?",
            "gold": "[ head_of_state ] of @wd . entity ( ) filter id == \" Q986 \" ^^wd:entity ;",
            "thingtalk": "[ country ] of @wd . entity ( ) filter id == \" Q986 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q986> <http://www.wikidata.org/prop/direct/P17> ?x. }",
            "gold_answer": "Isaias Afwerki (Q57348)",
            "answer": "Eritrea (Q986)"
        },
        {
            "question": "which computer scientist won an oscar ?",
            "paraphrase": "who won an oscar ? what type of award was it ? who is a computer scientist ?",
            "gold": "@wd . entity ( ) filter contains ( award_received , any ( [ id ] of @wd . event ( ) filter instance_of == \" Q19020 \" ^^wd:domain ) ) && contains ( occupation , \" Q82594 \" ^^wd:entity ) ;",
            "thingtalk": "[ award_received ] of @wd . entity ( ) filter id == \" Q25339785 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q25339785> <http://www.wikidata.org/prop/direct/P166> ?x. }",
            "gold_answer": "Paul Debevec (Q93006)\nEdwin Catmull (Q93161)\nDemetri Terzopoulos (Q3022082)\nHenrik Wann Jensen (Q5716583)\nKen Perlin (Q6388302)\nand 2 more ...",
            "answer": "None"
        },
        {
            "question": "which computer scientist won an oscar ?",
            "paraphrase": "who won an oscar ? what field of science does turing award winner grace hopper specialize in ?",
            "gold": "@wd . entity ( ) filter contains ( award_received , any ( [ id ] of @wd . event ( ) filter instance_of == \" Q19020 \" ^^wd:domain ) ) && contains ( occupation , \" Q82594 \" ^^wd:entity ) ;",
            "thingtalk": "[ field_of_work ] of @wd . entity ( ) filter contains ( award_received , \" Q185667 \" ^^wd:entity ) && id == \" Q11641 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q11641> <http://www.wikidata.org/prop/direct/P101> ?x. <http://www.wikidata.org/entity/Q11641> <http://www.wikidata.org/prop/direct/P166> <http://www.wikidata.org/entity/Q185667>. }",
            "gold_answer": "Paul Debevec (Q93006)\nEdwin Catmull (Q93161)\nDemetri Terzopoulos (Q3022082)\nHenrik Wann Jensen (Q5716583)\nKen Perlin (Q6388302)\nand 2 more ...",
            "answer": "None"
        },
        {
            "question": "which computer scientist won an oscar ?",
            "paraphrase": "who won an oscar ? what field of science did turing award winner grace hopper study ?",
            "gold": "@wd . entity ( ) filter contains ( award_received , any ( [ id ] of @wd . event ( ) filter instance_of == \" Q19020 \" ^^wd:domain ) ) && contains ( occupation , \" Q82594 \" ^^wd:entity ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Paul Debevec (Q93006)\nEdwin Catmull (Q93161)\nDemetri Terzopoulos (Q3022082)\nHenrik Wann Jensen (Q5716583)\nKen Perlin (Q6388302)\nand 2 more ...",
            "answer": ""
        },
        {
            "question": "who created family guy ?",
            "paraphrase": "what is the name of the show family guy ? who is the creator of family guy ?",
            "gold": "[ creator ] of @wd . entity ( ) filter id == \" Q5930 \" ^^wd:entity ;",
            "thingtalk": "[ creator ] of @wd . entity ( ) filter id == \" Q55012102 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q55012102> <http://www.wikidata.org/prop/direct/P170> ?x. }",
            "gold_answer": "Seth MacFarlane (Q188492)",
            "answer": "None"
        },
        {
            "question": "who created family guy ?",
            "paraphrase": "what is the name of the creator of family guy? what is seth macfarlane's profession?",
            "gold": "[ creator ] of @wd . entity ( ) filter id == \" Q5930 \" ^^wd:entity ;",
            "thingtalk": "[ creator ] of @wd . entity ( ) filter id == \" Q5930 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?x. }",
            "gold_answer": "Seth MacFarlane (Q188492)",
            "answer": "Seth MacFarlane (Q188492)"
        },
        {
            "question": "who created family guy ?",
            "paraphrase": "who is the creator of family guy ? what is seth macfarlane's profession?",
            "gold": "[ creator ] of @wd . entity ( ) filter id == \" Q5930 \" ^^wd:entity ;",
            "thingtalk": "[ creator ] of @wd . entity ( ) filter id == \" Q5930 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?x. }",
            "gold_answer": "Seth MacFarlane (Q188492)",
            "answer": "Seth MacFarlane (Q188492)"
        },
        {
            "question": "how many people live in poland ?",
            "paraphrase": "what is the population of poland ?",
            "gold": "[ population ] of @wd . entity ( ) filter id == \" Q36 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "how many people live in poland ?",
            "paraphrase": "what is the population of poland ? how many people reside in poland?",
            "gold": "[ population ] of @wd . entity ( ) filter id == \" Q36 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "how many people live in poland ?",
            "paraphrase": "what is the population of poland ?",
            "gold": "[ population ] of @wd . entity ( ) filter id == \" Q36 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "to which party does the mayor of paris belong ?",
            "paraphrase": "who is the mayor of paris ? what party does anne hidalgo belong?",
            "gold": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q1583726 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1583726> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?x. }",
            "gold_answer": "Socialist Party (Q170972)",
            "answer": "None"
        },
        {
            "question": "to which party does the mayor of paris belong ?",
            "paraphrase": "who is the mayor of paris ? what party does anne hidalgo belong to?",
            "gold": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q1583726 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1583726> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?x. }",
            "gold_answer": "Socialist Party (Q170972)",
            "answer": "None"
        },
        {
            "question": "to which party does the mayor of paris belong ?",
            "paraphrase": "who is the mayor of paris ? what party does anne hidalgo belong?",
            "gold": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ < head_of_government / member_of_political_party > ] of @wd . entity ( ) filter id == \" Q1583726 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1583726> <http://www.wikidata.org/prop/direct/P6>/<http://www.wikidata.org/prop/direct/P102> ?x. }",
            "gold_answer": "Socialist Party (Q170972)",
            "answer": "None"
        },
        {
            "question": "who does the voice of bart simpson ?",
            "paraphrase": "who is bart simpson ? who does the voice of bart simpson?",
            "gold": "[ voice_actor ] of @wd . entity ( ) filter id == \" Q5480 \" ^^wd:entity ;",
            "thingtalk": "[ voice_actor ] of @wd . entity ( ) filter id == \" Q5480 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5480> <http://www.wikidata.org/prop/direct/P725> ?x. }",
            "gold_answer": "None",
            "answer": "None"
        },
        {
            "question": "who does the voice of bart simpson ?",
            "paraphrase": "what is the name of the character bart simpson ? who does the voice of nancy cartwright?",
            "gold": "[ voice_actor ] of @wd . entity ( ) filter id == \" Q5480 \" ^^wd:entity ;",
            "thingtalk": "[ given_name , voice_actor ] of @wd . entity ( ) filter id == \" Q5480 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "None",
            "answer": ""
        },
        {
            "question": "who does the voice of bart simpson ?",
            "paraphrase": "who is the voice actor for bart simpson ? who is the voice of bart simpson in the simpsons tv show ?",
            "gold": "[ voice_actor ] of @wd . entity ( ) filter id == \" Q5480 \" ^^wd:entity ;",
            "thingtalk": "[ voice_actor ] of @wd . entity ( ) filter id == \" Q886 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q886> <http://www.wikidata.org/prop/direct/P725> ?x. }",
            "gold_answer": "None",
            "answer": "Jackie Mason (Q75021)\nHank Azaria (Q202056)\nYeardley Smith (Q228891)\nJulie Kavner (Q228893)\nNancy Cartwright (Q229211)\nand 10 more ..."
        },
        {
            "question": "who composed the soundtrack for cameron ' s titanic ?",
            "paraphrase": "who is the composer of the soundtrack for titanic? what is james horner's best known work?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q44578 \" ^^wd:entity ;",
            "thingtalk": "[ composer ] of @wd . entity ( ) filter id == \" Q104810552 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q104810552> <http://www.wikidata.org/prop/direct/P86> ?x. }",
            "gold_answer": "James Horner (Q106221)",
            "answer": "None"
        },
        {
            "question": "who composed the soundtrack for cameron ' s titanic ?",
            "paraphrase": "who composed the music for titanic ? what is the name of the composer for the titanic soundtrack?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q44578 \" ^^wd:entity ;",
            "thingtalk": "[ composer ] of @wd . entity ( ) filter id == \" Q2478025 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2478025> <http://www.wikidata.org/prop/direct/P86> ?x. }",
            "gold_answer": "James Horner (Q106221)",
            "answer": "None"
        },
        {
            "question": "who composed the soundtrack for cameron ' s titanic ?",
            "paraphrase": "which movie was composed by james horner ? who composed the soundtrack for titanic ?",
            "gold": "[ composer ] of @wd . entity ( ) filter id == \" Q44578 \" ^^wd:entity ;",
            "thingtalk": "[ composer ] of @wd . entity ( ) filter id == \" Q2478025 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2478025> <http://www.wikidata.org/prop/direct/P86> ?x. }",
            "gold_answer": "James Horner (Q106221)",
            "answer": "None"
        },
        {
            "question": "when did boris becker end his active career ?",
            "paraphrase": "who is boris becker? when did boris becker retire from tennis?",
            "gold": "[ occupation . end_time ] of @wd . entity ( ) filter id == \" Q76334 \" ^^wd:entity ;",
            "thingtalk": "[ occupation ] of @wd . entity ( ) filter id == \" Q104810552 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q104810552> <http://www.wikidata.org/prop/direct/P106> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "when did boris becker end his active career ?",
            "paraphrase": "who is boris becker ? when did boris becker retire from professional tennis?",
            "gold": "[ occupation . end_time ] of @wd . entity ( ) filter id == \" Q76334 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "when did boris becker end his active career ?",
            "paraphrase": "what year did boris becker end his active career ?",
            "gold": "[ occupation . end_time ] of @wd . entity ( ) filter id == \" Q76334 \" ^^wd:entity ;",
            "thingtalk": "[ occupation . end_time ] of @wd . entity ( ) filter id == \" Q6100293 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "show me all basketball players that are higher than 2 meters .",
            "paraphrase": "what is the height of basketball players ? which basketball players are taller than 2 meters?",
            "gold": "@wd . entity ( ) filter contains ( occupation , \" Q3665646 \" ^^wd:entity ) && height >= 2 m ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "show me all basketball players that are higher than 2 meters .",
            "paraphrase": "what sport are we talking about ? what is the minimum height requirement for basketball players ?",
            "gold": "@wd . entity ( ) filter contains ( occupation , \" Q3665646 \" ^^wd:entity ) && height >= 2 m ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "show me all basketball players that are higher than 2 meters .",
            "paraphrase": "what sport is basketball? what is the height requirement for basketball players?",
            "gold": "@wd . entity ( ) filter contains ( occupation , \" Q3665646 \" ^^wd:entity ) && height >= 2 m ;",
            "thingtalk": "[ height ] of @wd . entity ( ) filter id == \" Q609847 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q609847> <http://www.wikidata.org/prop/direct/P2048> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "what country is sitecore from ?",
            "paraphrase": "where is sitecore located ? what is the nationality of sitecore?",
            "gold": "[ country ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "thingtalk": "[ country_of_origin ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P495> ?x. }",
            "gold_answer": "Denmark (Q35)",
            "answer": "None"
        },
        {
            "question": "what country is sitecore from ?",
            "paraphrase": "where is sitecore based ? what country is sitecore from ?",
            "gold": "[ country ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "thingtalk": "[ country ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P17> ?x. }",
            "gold_answer": "Denmark (Q35)",
            "answer": "Denmark (Q35)"
        },
        {
            "question": "what country is sitecore from ?",
            "paraphrase": "what is sitecore? what country is sitecore headquartered in ?",
            "gold": "[ country ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "thingtalk": "[ headquarters_location ] of @wd . entity ( ) filter id == \" Q2663195 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2663195> <http://www.wikidata.org/prop/direct/P159> ?x. }",
            "gold_answer": "Denmark (Q35)",
            "answer": "Vester Farimagsgade (Q12340757)"
        },
        {
            "question": "which country was bill gates born in ?",
            "paraphrase": "where was bill gates born ? what country is bill gates from?",
            "gold": "[ < place_of_birth / country > ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "thingtalk": "[ < place_of_birth / country > ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5284> <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> ?x. }",
            "gold_answer": "United States of America (Q30)",
            "answer": "United States of America (Q30)"
        },
        {
            "question": "which country was bill gates born in ?",
            "paraphrase": "what year was bill gates born ? in which country was bill gates born?",
            "gold": "[ < place_of_birth / country > ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "thingtalk": "[ place_of_birth , place_of_death ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "United States of America (Q30)",
            "answer": ""
        },
        {
            "question": "which country was bill gates born in ?",
            "paraphrase": "who is bill gates ? what country was he born in ?",
            "gold": "[ < place_of_birth / country > ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "thingtalk": "[ < place_of_birth / country > ] of @wd . entity ( ) filter id == \" Q5284 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q5284> <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> ?x. }",
            "gold_answer": "United States of America (Q30)",
            "answer": "United States of America (Q30)"
        },
        {
            "question": "who developed slack ?",
            "paraphrase": "who created slack ? who is the founder of slack ?",
            "gold": "@wd . entity ( ) filter contains ( product_or_material_produced , \" Q17130715 \" ^^wd:entity ) ;",
            "thingtalk": "[ founded_by ] of @wd . entity ( ) filter id == \" Q17130715 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q17130715> <http://www.wikidata.org/prop/direct/P112> ?x. }",
            "gold_answer": "Slack Technologies (Q7808625)",
            "answer": "Stewart Butterfield (Q1561837)\nCal Henderson (Q5018144)\n"
        },
        {
            "question": "who developed slack ?",
            "paraphrase": "what is slack ? who created slack ?",
            "gold": "@wd . entity ( ) filter contains ( product_or_material_produced , \" Q17130715 \" ^^wd:entity ) ;",
            "thingtalk": "[ creator ] of @wd . entity ( ) filter id == \" Q27961909 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q27961909> <http://www.wikidata.org/prop/direct/P170> ?x. }",
            "gold_answer": "Slack Technologies (Q7808625)",
            "answer": "None"
        },
        {
            "question": "who developed slack ?",
            "paraphrase": "who created slack ? what company developed slack ?",
            "gold": "@wd . entity ( ) filter contains ( product_or_material_produced , \" Q17130715 \" ^^wd:entity ) ;",
            "thingtalk": "[ creator ] of @wd . entity ( ) filter id == \" Q17130715 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q17130715> <http://www.wikidata.org/prop/direct/P170> ?x. }",
            "gold_answer": "Slack Technologies (Q7808625)",
            "answer": "None"
        },
        {
            "question": "in which city did nikos kazantzakis die ?",
            "paraphrase": "who was nikos kazantzakis ? when did nikos kazantzakis die ?",
            "gold": "[ place_of_death ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "thingtalk": "[ date_of_death ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q214622> <http://www.wikidata.org/prop/direct/P570> ?x. }",
            "gold_answer": "Freiburg im Breisgau (Q2833)",
            "answer": ""
        },
        {
            "question": "in which city did nikos kazantzakis die ?",
            "paraphrase": "who is nikos kazantzakis ? what year did nikos kazantzakis die ? where did nikos kazantzakis die ?",
            "gold": "[ place_of_death ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "thingtalk": "[ date_of_death , pseudonym ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "Freiburg im Breisgau (Q2833)",
            "answer": ""
        },
        {
            "question": "in which city did nikos kazantzakis die ?",
            "paraphrase": "who was nikos kazantzakis ? what city did he die in ?",
            "gold": "[ place_of_death ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "thingtalk": "[ place_of_death ] of @wd . entity ( ) filter id == \" Q214622 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q214622> <http://www.wikidata.org/prop/direct/P20> ?x. }",
            "gold_answer": "Freiburg im Breisgau (Q2833)",
            "answer": "Freiburg im Breisgau (Q2833)"
        },
        {
            "question": "how many grand-children did jacques cousteau have ?",
            "paraphrase": "who is jacques cousteau ? how many children did he have ? how many grandchildren did they have ?",
            "gold": "count ( @wd . human ( ) filter in_array ( id , any ( [ < child / child > ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ) ) ) ;",
            "thingtalk": "[ count ( child ) ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "how many grand-children did jacques cousteau have ?",
            "paraphrase": "how many children did jacques cousteau have ? how many grandchildren does each of jacques cousteau's children have ?",
            "gold": "count ( @wd . human ( ) filter in_array ( id , any ( [ < child / child > ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ) ) ) ;",
            "thingtalk": "[ child ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q83233> <http://www.wikidata.org/prop/direct/P40> ?x. }",
            "gold_answer": "",
            "answer": "Philippe Cousteau (Q936663)\nJean-Michel Cousteau (Q1374493)\nPierre-Yves Cousteau (Q113655315)\nDiane Cousteau (Q113655319)\n"
        },
        {
            "question": "how many grand-children did jacques cousteau have ?",
            "paraphrase": "who was jacques cousteau? how many grandchildren did he have ?",
            "gold": "count ( @wd . human ( ) filter in_array ( id , any ( [ < child / child > ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ) ) ) ;",
            "thingtalk": "[ count ( child ) ] of @wd . entity ( ) filter id == \" Q83233 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "which films did stanley kubrick direct ?",
            "paraphrase": "who is stanley kubrick ? what films did kubrick direct?",
            "gold": "@wd . entity ( ) filter contains ( director , \" Q2001 \" ^^wd:entity ) ;",
            "thingtalk": "[ director ] of @wd . entity ( ) filter id == \" Q2001 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2001> <http://www.wikidata.org/prop/direct/P57> ?x. }",
            "gold_answer": "2001: A Space Odyssey (Q103474)\nDr. Strangelove (Q105702)\nSpartacus (Q108297)\nA Clockwork Orange (Q181086)\nThe Shining (Q186341)\nand 12 more ...",
            "answer": "None"
        },
        {
            "question": "which films did stanley kubrick direct ?",
            "paraphrase": "who is stanley kubrick? what films did stanley kubrick direct?",
            "gold": "@wd . entity ( ) filter contains ( director , \" Q2001 \" ^^wd:entity ) ;",
            "thingtalk": "[ director ] of @wd . entity ( ) filter id == \" Q2001 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2001> <http://www.wikidata.org/prop/direct/P57> ?x. }",
            "gold_answer": "2001: A Space Odyssey (Q103474)\nDr. Strangelove (Q105702)\nSpartacus (Q108297)\nA Clockwork Orange (Q181086)\nThe Shining (Q186341)\nand 12 more ...",
            "answer": "None"
        },
        {
            "question": "which films did stanley kubrick direct ?",
            "paraphrase": "who is stanley kubrick ? what movies did he direct?",
            "gold": "@wd . entity ( ) filter contains ( director , \" Q2001 \" ^^wd:entity ) ;",
            "thingtalk": "[ director ] of @wd . entity ( ) filter id == \" Q2001 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2001> <http://www.wikidata.org/prop/direct/P57> ?x. }",
            "gold_answer": "2001: A Space Odyssey (Q103474)\nDr. Strangelove (Q105702)\nSpartacus (Q108297)\nA Clockwork Orange (Q181086)\nThe Shining (Q186341)\nand 12 more ...",
            "answer": "None"
        },
        {
            "question": "does neymar play for real madrid ?",
            "paraphrase": "which club does neymar play for ? does neymar play for fc barcelona ?",
            "gold": "[ contains ( member_of_sports_team , \" Q8682 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "thingtalk": "[ member_of_sports_team ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> ?x. }",
            "gold_answer": "",
            "answer": "Paris Saint-Germain F.C. (Q483020)"
        },
        {
            "question": "does neymar play for real madrid ?",
            "paraphrase": "what team does neymar play for ? does neymar play for real madrid football club ?",
            "gold": "[ contains ( member_of_sports_team , \" Q8682 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "thingtalk": "[ member_of_sports_team ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> ?x. }",
            "gold_answer": "",
            "answer": "Paris Saint-Germain F.C. (Q483020)"
        },
        {
            "question": "does neymar play for real madrid ?",
            "paraphrase": "who is neymar ? what team does neymar play for ?",
            "gold": "[ contains ( member_of_sports_team , \" Q8682 \" ^^wd:entity ) ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "thingtalk": "[ member_of_sports_team ] of @wd . entity ( ) filter id == \" Q142794 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q142794> <http://www.wikidata.org/prop/direct/P54> ?x. }",
            "gold_answer": "",
            "answer": "Paris Saint-Germain F.C. (Q483020)"
        },
        {
            "question": "how many seats does the home stadium of fc porto have ?",
            "paraphrase": "what is the home stadium of fc porto? how many seats does estádio do dragão have?",
            "gold": "[ < home_venue / maximum_capacity > ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "thingtalk": "[ home_venue ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q128446> <http://www.wikidata.org/prop/direct/P115> ?x. }",
            "gold_answer": "",
            "answer": "Estádio do Dragão (Q271454)"
        },
        {
            "question": "how many seats does the home stadium of fc porto have ?",
            "paraphrase": "what is the home stadium of fc porto ? how many seats does estádio do dragão have ?",
            "gold": "[ < home_venue / maximum_capacity > ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "thingtalk": "[ home_venue ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q128446> <http://www.wikidata.org/prop/direct/P115> ?x. }",
            "gold_answer": "",
            "answer": "Estádio do Dragão (Q271454)"
        },
        {
            "question": "how many seats does the home stadium of fc porto have ?",
            "paraphrase": "what is the home stadium of fc porto? how many seats does estádio do dragão have?",
            "gold": "[ < home_venue / maximum_capacity > ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "thingtalk": "[ home_venue ] of @wd . entity ( ) filter id == \" Q128446 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q128446> <http://www.wikidata.org/prop/direct/P115> ?x. }",
            "gold_answer": "",
            "answer": "Estádio do Dragão (Q271454)"
        },
        {
            "question": "show me all books in asimov ' s foundation series .",
            "paraphrase": "how many books are in asimov's foundation series ? what are the titles of the books in the foundation series ?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q1564644 \" ^^wd:entity ;",
            "thingtalk": "[ count ( part_of ) ] of @wd . entity ( ) filter id == \" Q34981 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Foundation (Q753894)\nPrelude to Foundation (Q783533)\nFoundation and Empire (Q839800)\nSecond Foundation (Q853927)\nFoundation’s Edge (Q932592)\nand 2 more ...",
            "answer": "None"
        },
        {
            "question": "show me all books in asimov ' s foundation series .",
            "paraphrase": "which books are in asimov's foundation series ? how many books are in asimov's foundation series ?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q1564644 \" ^^wd:entity ;",
            "thingtalk": "[ count ( part_of ) ] of @wd . entity ( ) filter id == \" Q34981 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Foundation (Q753894)\nPrelude to Foundation (Q783533)\nFoundation and Empire (Q839800)\nSecond Foundation (Q853927)\nFoundation’s Edge (Q932592)\nand 2 more ...",
            "answer": "None"
        },
        {
            "question": "show me all books in asimov ' s foundation series .",
            "paraphrase": "what is the foundation series by asimov? what books are included in the foundation series by asimov?",
            "gold": "[ has_parts ] of @wd . entity ( ) filter id == \" Q1564644 \" ^^wd:entity ;",
            "thingtalk": "@wd . entity ( ) filter contains ( part_of , \" Q1564644 \" ^^wd:entity ) ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q1564644>. }",
            "gold_answer": "Foundation (Q753894)\nPrelude to Foundation (Q783533)\nFoundation and Empire (Q839800)\nSecond Foundation (Q853927)\nFoundation’s Edge (Q932592)\nand 2 more ...",
            "answer": "Foundation Trilogy (Q20899148)"
        },
        {
            "question": "which movies star both liz taylor and richard burton ?",
            "paraphrase": "which movies featured liz taylor? which movies featured richard burton? which movies starred both liz taylor and richard burton?",
            "gold": "@wd . entity ( ) filter contains ( cast_member , \" Q34851 \" ^^wd:entity ) && contains ( cast_member , \" Q151973 \" ^^wd:entity ) ;",
            "thingtalk": "@wd . film ( ) filter contains ( cast_member , \" Q151973 \" ^^wd:entity ) && contains ( cast_member , \" Q34851 \" ^^wd:entity ) ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q11424>. ?x <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q151973>. ?x <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q34851>. }",
            "gold_answer": "Who's Afraid of Virginia Woolf? (Q325643)\nThe Sandpiper (Q426314)\nThe Comedians (Q568696)\nHammersmith Is Out (Q634049)\nBoom! (Q668569)\nand 7 more ...",
            "answer": "Who's Afraid of Virginia Woolf? (Q325643)\nThe Sandpiper (Q426314)\nThe Comedians (Q568696)\nHammersmith Is Out (Q634049)\nBoom! (Q668569)\nand 7 more ..."
        },
        {
            "question": "which movies star both liz taylor and richard burton ?",
            "paraphrase": "what movies did liz taylor star in? what movies did richard burton star in? what movies did both liz taylor and richard burton star in?",
            "gold": "@wd . entity ( ) filter contains ( cast_member , \" Q34851 \" ^^wd:entity ) && contains ( cast_member , \" Q151973 \" ^^wd:entity ) ;",
            "thingtalk": "[ cast_member , director ] of @wd . entity ( ) filter id == \" Q151973 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "Who's Afraid of Virginia Woolf? (Q325643)\nThe Sandpiper (Q426314)\nThe Comedians (Q568696)\nHammersmith Is Out (Q634049)\nBoom! (Q668569)\nand 7 more ...",
            "answer": ""
        },
        {
            "question": "which movies star both liz taylor and richard burton ?",
            "paraphrase": "which actors star in which movies? which movies star liz taylor and richard burton?",
            "gold": "@wd . entity ( ) filter contains ( cast_member , \" Q34851 \" ^^wd:entity ) && contains ( cast_member , \" Q151973 \" ^^wd:entity ) ;",
            "thingtalk": "[ cast_member ] of @wd . film ( ) ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q11424>. ?x <http://www.wikidata.org/prop/direct/P161> ?y. }",
            "gold_answer": "Who's Afraid of Virginia Woolf? (Q325643)\nThe Sandpiper (Q426314)\nThe Comedians (Q568696)\nHammersmith Is Out (Q634049)\nBoom! (Q668569)\nand 7 more ...",
            "answer": "Clark Gable (Q71243)\nCraig Ferguson (Q72867)\nOlivia de Havilland (Q95068)\nMariangela Melato (Q106927)\nBarbara O'Neil (Q113566)\nand 167110 more ..."
        },
        {
            "question": "in which city are the headquarters of the united nations ?",
            "paraphrase": "where are the headquarters of the united nations? what city are the headquarters of the united nations located in?",
            "gold": "[ located_in_the_administrative_territorial_entity : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q11297 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "New York City (Q60)",
            "answer": ""
        },
        {
            "question": "in which city are the headquarters of the united nations ?",
            "paraphrase": "where are the headquarters of the united nations? what city is the united nations headquarters in?",
            "gold": "[ located_in_the_administrative_territorial_entity : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q11297 \" ^^wd:entity ;",
            "thingtalk": "[ headquarters_location ] of @wd . entity ( ) filter id == \" Q1065 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1065> <http://www.wikidata.org/prop/direct/P159> ?x. }",
            "gold_answer": "New York City (Q60)",
            "answer": "New York City (Q60)"
        },
        {
            "question": "in which city are the headquarters of the united nations ?",
            "paraphrase": "where are the headquarters of the united nations ? where is the united nations building located?",
            "gold": "[ located_in_the_administrative_territorial_entity : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q11297 \" ^^wd:entity ;",
            "thingtalk": "[ headquarters_location ] of @wd . entity ( ) filter id == \" Q1065 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q1065> <http://www.wikidata.org/prop/direct/P159> ?x. }",
            "gold_answer": "New York City (Q60)",
            "answer": "New York City (Q60)"
        },
        {
            "question": "in which city was the president of montenegro born ?",
            "paraphrase": "who is the president of montenegro ? where was milo dukanović born?",
            "gold": "[ < head_of_state / place_of_birth > : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q236 \" ^^wd:entity ;",
            "thingtalk": "[ < head_of_state / place_of_birth > ] of @wd . entity ( ) filter id == \" Q200305 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q200305> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?x. }",
            "gold_answer": "Nikšić (Q200733)",
            "answer": "None"
        },
        {
            "question": "in which city was the president of montenegro born ?",
            "paraphrase": "who is the president of montenegro ? what city was milo dukanović born in?",
            "gold": "[ < head_of_state / place_of_birth > : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q236 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Nikšić (Q200733)",
            "answer": ""
        },
        {
            "question": "in which city was the president of montenegro born ?",
            "paraphrase": "who is the president of montenegro ? where was milo dukanović born?",
            "gold": "[ < head_of_state / place_of_birth > : Entity ( wd:city ) ] of @wd . entity ( ) filter id == \" Q236 \" ^^wd:entity ;",
            "thingtalk": "[ < head_of_state / place_of_birth > ] of @wd . entity ( ) filter id == \" Q200305 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q200305> <http://www.wikidata.org/prop/direct/P35>/<http://www.wikidata.org/prop/direct/P19> ?x. }",
            "gold_answer": "Nikšić (Q200733)",
            "answer": "None"
        },
        {
            "question": "which writers studied in istanbul ?",
            "paraphrase": "where did writers study ? what writers studied in istanbul?",
            "gold": "@wd . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , \" Q406 \" ^^wd:entity ) && contains ( occupation , \" Q36180 \" ^^wd:entity ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Behçet Necatigil (Q198849)\nİsmet Giritli (Q344228)\nAhmet Yalçınkaya (Q401956)\nAli Bayramoğlu (Q462705)\nDemir Özlü (Q668833)\nand 307 more ...",
            "answer": ""
        },
        {
            "question": "which writers studied in istanbul ?",
            "paraphrase": "who are the writers ? what universities are in istanbul ?",
            "gold": "@wd . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , \" Q406 \" ^^wd:entity ) && contains ( occupation , \" Q36180 \" ^^wd:entity ) ;",
            "thingtalk": "[ author ] of @wd . entity ( ) filter id == \" Q406 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q406> <http://www.wikidata.org/prop/direct/P50> ?x. }",
            "gold_answer": "Behçet Necatigil (Q198849)\nİsmet Giritli (Q344228)\nAhmet Yalçınkaya (Q401956)\nAli Bayramoğlu (Q462705)\nDemir Özlü (Q668833)\nand 307 more ...",
            "answer": "None"
        },
        {
            "question": "which writers studied in istanbul ?",
            "paraphrase": "who are the writers from istanbul? what writers studied in istanbul?",
            "gold": "@wd . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , \" Q406 \" ^^wd:entity ) && contains ( occupation , \" Q36180 \" ^^wd:entity ) ;",
            "thingtalk": "[ educated_at ] of @wd . entity ( ) filter id == \" Q406 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q406> <http://www.wikidata.org/prop/direct/P69> ?x. }",
            "gold_answer": "Behçet Necatigil (Q198849)\nİsmet Giritli (Q344228)\nAhmet Yalçınkaya (Q401956)\nAli Bayramoğlu (Q462705)\nDemir Özlü (Q668833)\nand 307 more ...",
            "answer": "None"
        },
        {
            "question": "who is the mayor of paris ?",
            "paraphrase": "what is the name of the mayor of paris ? who is anne hidalgo ?",
            "gold": "[ head_of_government ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ official_name ] of @wd . entity ( ) filter id == \" Q2851133 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2851133> <http://www.wikidata.org/prop/direct/P1448> ?x. }",
            "gold_answer": "Anne Hidalgo (Q2851133)",
            "answer": "None"
        },
        {
            "question": "who is the mayor of paris ?",
            "paraphrase": "what is the name of the mayor of paris ? who is anne hidalgo?",
            "gold": "[ head_of_government ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ official_name ] of @wd . entity ( ) filter id == \" Q2851133 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2851133> <http://www.wikidata.org/prop/direct/P1448> ?x. }",
            "gold_answer": "Anne Hidalgo (Q2851133)",
            "answer": "None"
        },
        {
            "question": "who is the mayor of paris ?",
            "paraphrase": "what is the name of the mayor of paris ? who is anne hidalgo ?",
            "gold": "[ head_of_government ] of @wd . entity ( ) filter id == \" Q90 \" ^^wd:entity ;",
            "thingtalk": "[ official_name ] of @wd . entity ( ) filter id == \" Q2851133 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q2851133> <http://www.wikidata.org/prop/direct/P1448> ?x. }",
            "gold_answer": "Anne Hidalgo (Q2851133)",
            "answer": "None"
        },
        {
            "question": "what is the full name of prince charles ?",
            "paraphrase": "what is the first name of prince charles ? what is the surname of prince charles ?",
            "gold": "[ family_name , given_name ] of @wd . entity ( ) filter id == \" Q43274 \" ^^wd:entity ;",
            "thingtalk": "[ family_name , given_name ] of @wd . entity ( ) filter id == \" Q43274 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "what is the full name of prince charles ?",
            "paraphrase": "what is prince charles's first name ? what is prince charles's last name ?",
            "gold": "[ family_name , given_name ] of @wd . entity ( ) filter id == \" Q43274 \" ^^wd:entity ;",
            "thingtalk": "[ family_name , given_name ] of @wd . entity ( ) filter id == \" Q25339785 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "what is the full name of prince charles ?",
            "paraphrase": "what is the given name of prince charles ? what is the surname of prince charles ?",
            "gold": "[ family_name , given_name ] of @wd . entity ( ) filter id == \" Q43274 \" ^^wd:entity ;",
            "thingtalk": "[ given_name , given_name ] of @wd . entity ( ) filter id == \" Q43274 \" ^^wd:entity ;",
            "sparql": "Failed to convert thingtalk into SPARQL",
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "what is the longest river in china ?",
            "paraphrase": "where is the longest river in china? what is the name of the river?",
            "gold": "sort ( length desc of @wd . river ( ) filter contains ( country , \" Q148 \" ^^wd:entity ) ) [ 1 ] ;",
            "thingtalk": "[ basin_country ] of @wd . river ( ) ;",
            "sparql": "SELECT DISTINCT ?y WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q4022>. ?x <http://www.wikidata.org/prop/direct/P205> ?y. }",
            "gold_answer": "Yangtze (Q5413)",
            "answer": "Iran (Q794)\nTurkmenistan (Q874)\nAfghanistan (Q889)\nSpain (Q29)\nItaly (Q38)\nand 132 more ..."
        },
        {
            "question": "what is the longest river in china ?",
            "paraphrase": "what are the major rivers in china ? which river is the longest in china ?",
            "gold": "sort ( length desc of @wd . river ( ) filter contains ( country , \" Q148 \" ^^wd:entity ) ) [ 1 ] ;",
            "thingtalk": "sort ( length desc of @wd . river ( ) filter contains ( located_in_the_administrative_territorial_entity , \" Q148 \" ^^wd:entity ) ) [ 1 ] ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q4022>. ?x <http://www.wikidata.org/prop/direct/P2043> ?y. ?x <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q148>. } ORDER BY DESC(?y) LIMIT 1",
            "gold_answer": "Yangtze (Q5413)",
            "answer": "None"
        },
        {
            "question": "what is the longest river in china ?",
            "paraphrase": "what is the longest river in the world ? what is the longest river in asia ?",
            "gold": "sort ( length desc of @wd . river ( ) filter contains ( country , \" Q148 \" ^^wd:entity ) ) [ 1 ] ;",
            "thingtalk": "sort ( length desc of @wd . river ( ) filter contains ( part_of , \" Q48 \" ^^wd:entity ) ) [ 1 ] ;",
            "sparql": "SELECT DISTINCT ?x WHERE { ?x <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q4022>. ?x <http://www.wikidata.org/prop/direct/P2043> ?y. ?x <http://www.wikidata.org/prop/direct/P361> <http://www.wikidata.org/entity/Q48>. } ORDER BY DESC(?y) LIMIT 1",
            "gold_answer": "Yangtze (Q5413)",
            "answer": "None"
        },
        {
            "question": "who discovered ceres ?",
            "paraphrase": "what year was ceres discovered ? who discovered ceres in 1801 ?",
            "gold": "[ discoverer_or_inventor ] of @wd . entity ( ) filter id == \" Q596 \" ^^wd:entity ;",
            "thingtalk": "[ time_of_discovery_or_invention ] of @wd . entity ( ) filter id == \" Q6100293 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q6100293> <http://www.wikidata.org/prop/direct/P575> ?x. }",
            "gold_answer": "Giuseppe Piazzi (Q14280)",
            "answer": "None"
        },
        {
            "question": "who discovered ceres ?",
            "paraphrase": "when was ceres discovered ? who discovered the dwarf planet in 1801?",
            "gold": "[ discoverer_or_inventor ] of @wd . entity ( ) filter id == \" Q596 \" ^^wd:entity ;",
            "thingtalk": "[ discoverer_or_inventor ] of @wd . entity ( ) filter id == \" Q596 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q596> <http://www.wikidata.org/prop/direct/P61> ?x. }",
            "gold_answer": "Giuseppe Piazzi (Q14280)",
            "answer": "Giuseppe Piazzi (Q14280)"
        },
        {
            "question": "who discovered ceres ?",
            "paraphrase": "when was ceres discovered? who discovered ceres in 1801 ?",
            "gold": "[ discoverer_or_inventor ] of @wd . entity ( ) filter id == \" Q596 \" ^^wd:entity ;",
            "thingtalk": "[ time_of_discovery_or_invention ] of @wd . entity ( ) filter id == \" Q32102 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q32102> <http://www.wikidata.org/prop/direct/P575> ?x. }",
            "gold_answer": "Giuseppe Piazzi (Q14280)",
            "answer": "None"
        },
        {
            "question": "when did princess diana die ?",
            "paraphrase": "what year did princess diana die ?",
            "gold": "[ date_of_death ] of @wd . entity ( ) filter id == \" Q9685 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "when did princess diana die ?",
            "paraphrase": "what year did princess diana die?",
            "gold": "[ date_of_death ] of @wd . entity ( ) filter id == \" Q9685 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "when did princess diana die ?",
            "paraphrase": "what year did princess diana die ?",
            "gold": "[ date_of_death ] of @wd . entity ( ) filter id == \" Q9685 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "which presidents were born in 1945 ?",
            "paraphrase": "what year was 1945 ? who were the presidents born in 1945 ?",
            "gold": "@wd . human ( ) filter contains ( position_held , \" Q30461 \" ^^wd:entity ) && date_of_birth <= new Date ( 1945 ) + 1 year && date_of_birth >= new Date ( 1945 ) ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "",
            "answer": ""
        },
        {
            "question": "which presidents were born in 1945 ?",
            "paraphrase": "what year was 1945 ? who were the presidents in 1945?",
            "gold": "@wd . human ( ) filter contains ( position_held , \" Q30461 \" ^^wd:entity ) && date_of_birth <= new Date ( 1945 ) + 1 year && date_of_birth >= new Date ( 1945 ) ;",
            "thingtalk": "[ head_of_state ] of @wd . entity ( ) filter id == \" Q609847 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q609847> <http://www.wikidata.org/prop/direct/P35> ?x. }",
            "gold_answer": "",
            "answer": "None"
        },
        {
            "question": "give me all federal chancellors of germany .",
            "paraphrase": "how many federal chancellors has germany had? who have been the federal chancellors of germany?",
            "gold": "@wd . entity ( ) filter contains ( position_held , \" Q4970706 \" ^^wd:entity ) ;",
            "thingtalk": "[ count ( head_of_government ) ] of @wd . entity ( ) filter id == \" Q183 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Angela Merkel (Q567)\nKonrad Adenauer (Q2492)\nLudwig Erhard (Q2496)\nWilly Brandt (Q2514)\nKurt Georg Kiesinger (Q2512)\nand 5 more ...",
            "answer": "None"
        },
        {
            "question": "give me all federal chancellors of germany .",
            "paraphrase": "how many federal chancellors have there been in germany ? who were the federal chancellors of germany ?",
            "gold": "@wd . entity ( ) filter contains ( position_held , \" Q4970706 \" ^^wd:entity ) ;",
            "thingtalk": "[ count ( head_of_government ) ] of @wd . entity ( ) filter id == \" Q5529610 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT null WHERE {  }",
            "gold_answer": "Angela Merkel (Q567)\nKonrad Adenauer (Q2492)\nLudwig Erhard (Q2496)\nWilly Brandt (Q2514)\nKurt Georg Kiesinger (Q2512)\nand 5 more ...",
            "answer": "None"
        },
        {
            "question": "give me all federal chancellors of germany .",
            "paraphrase": "who were the federal chancellors of germany ?",
            "gold": "@wd . entity ( ) filter contains ( position_held , \" Q4970706 \" ^^wd:entity ) ;",
            "thingtalk": "[ head_of_government ] of @wd . entity ( ) filter id == \" Q56022 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q56022> <http://www.wikidata.org/prop/direct/P6> ?x. }",
            "gold_answer": "Angela Merkel (Q567)\nKonrad Adenauer (Q2492)\nLudwig Erhard (Q2496)\nWilly Brandt (Q2514)\nKurt Georg Kiesinger (Q2512)\nand 5 more ...",
            "answer": "None"
        },
        {
            "question": "how many moons does mars have ?",
            "paraphrase": "what is the name of the planet mars? how many moons does mars have?",
            "gold": "[ child_astronomical_body ] of @wd . entity ( ) filter id == \" Q111 \" ^^wd:entity ;",
            "thingtalk": "[ official_name ] of @wd . entity ( ) filter id == \" Q111 \" ^^wd:entity ;",
            "sparql": "SELECT DISTINCT ?x WHERE { <http://www.wikidata.org/entity/Q111> <http://www.wikidata.org/prop/direct/P1448> ?x. }",
            "gold_answer": "Mars Reconnaissance Orbiter (Q183160)\nMariner 9 (Q203801)\nMars Express (Q205672)\nMars Global Surveyor (Q206300)\n2001 Mars Odyssey (Q207164)\nand 11 more ...",
            "answer": "None"
        },
        {
            "question": "how many moons does mars have ?",
            "paraphrase": "how many natural satellites does mars have?",
            "gold": "[ child_astronomical_body ] of @wd . entity ( ) filter id == \" Q111 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Mars Reconnaissance Orbiter (Q183160)\nMariner 9 (Q203801)\nMars Express (Q205672)\nMars Global Surveyor (Q206300)\n2001 Mars Odyssey (Q207164)\nand 11 more ...",
            "answer": ""
        },
        {
            "question": "how many moons does mars have ?",
            "paraphrase": "what is the celestial body of mars ? how many moons does mars have?",
            "gold": "[ child_astronomical_body ] of @wd . entity ( ) filter id == \" Q111 \" ^^wd:entity ;",
            "thingtalk": "Failed to parse the question.",
            "sparql": null,
            "gold_answer": "Mars Reconnaissance Orbiter (Q183160)\nMariner 9 (Q203801)\nMars Express (Q205672)\nMars Global Surveyor (Q206300)\n2001 Mars Odyssey (Q207164)\nand 11 more ...",
            "answer": ""
        }
    ]
}